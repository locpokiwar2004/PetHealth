@page "/DanhSachKhachHang"
@inject PetHealthRepository Repository
@rendermode InteractiveServer
@inject NavigationManager Navigation

<PageTitle>Danh Sách Khách Hàng</PageTitle>

<div>
    <h3 style="text-align:center">DANH SÁCH KHÁCH HÀNG</h3>
    <div>
        <a href="/ThemKhachHang" class="btn-add-medicine">
            <span class="button__text">Thêm khách hàng</span>
            <span class="button__icon">
                <i class="fa-solid fa-plus"></i>
            </span>
        </a>
    </div>

    <div>
        <table class="content-table">
            <thead>
                <tr>
                    <th>Mã khách hàng</th>
                    <th>Họ và tên khách hàng</th>
                    <th>Số điện thoại</th>
                    <th>Email</th>
                    <th>Địa chỉ</th>
                    <th>Tên thú cưng</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (KhachHangs is null)
                {
                    <tr><td colspan="7">Đang tải dữ liệu. Vui lòng đợi...</td></tr>
                }
                else if (KhachHangs.Any())
                {
                    @foreach (var khachHang in KhachHangs)
                    {
                        <tr>
                            <td>@khachHang.MaKhachHang</td>
                            <td>@khachHang.TenKhachHang</td>
                            <td>@khachHang.SoDienThoai</td>
                            <td>@khachHang.Email</td>
                            <td>@khachHang.DiaChi</td>
                            <td>@khachHang.TenThuCung</td>
                            <td>
                                <a href="@($"/ChinhSuaKhachHang/{khachHang.MaKhachHang}")" class="btn-edit">
                                    <i class="fa-solid fa-pen-to-square"></i>
                                </a>

                                <button @onclick="() => OpenConfirmDialog(khachHang.MaKhachHang)" class="delete-button">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="7">Không có khách hàng nào để hiển thị.</td></tr>
                }
            </tbody>
        </table>
    </div>
</div>

<DeleteConfirmDialog Show="showConfirmDialog"
                     OnCancel="CancelDelete"
                     OnOK="DeleteKhachHang">
    <h3>
        Bạn có muốn xóa khách hàng @selectedKhachHang?.TenKhachHang không?
    </h3>
</DeleteConfirmDialog>

@code {
    private bool showConfirmDialog;
    private int? selectedMaKhachHang;
    private KhachHang? selectedKhachHang;

    [Parameter]
    public required PetHealthCatalog.Domain.Entities.KhachHang khachHang { get; set; }

    private List<KhachHang> KhachHangs = new List<KhachHang>();

    private void OpenConfirmDialog(int maKhachHang)
    {
        selectedMaKhachHang = maKhachHang;
        selectedKhachHang = KhachHangs.FirstOrDefault(k => k.MaKhachHang == maKhachHang);
        showConfirmDialog = true;
    }

    private void CancelDelete()
    {
        showConfirmDialog = false;
        selectedMaKhachHang = null;
        selectedKhachHang = null;
    }

    private async Task DeleteKhachHang()
    {
        if (selectedMaKhachHang != null)
        {
            await Repository.DeleteByIdAsync(selectedMaKhachHang.Value);
            KhachHangs.RemoveAll(k => k.MaKhachHang == selectedMaKhachHang);
            showConfirmDialog = false;
            selectedMaKhachHang = null;
            selectedKhachHang = null;

            // Refresh the page or update the data
            Navigation.NavigateTo("/DanhSachKhachHang", forceLoad: true);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch the list of customers from the repository
            KhachHangs = await Repository.GetAllAsyncKhachHang() ?? new List<KhachHang>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            KhachHangs = new List<KhachHang>(); // Assign an empty list in case of an error
        }
    }
}
